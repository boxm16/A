/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controllers.ItemController;
import Controllers.ProductController;
import Models.Item;
import Models.Product;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Michail Sitmalidis
 */
public class ReceivingItemFrame extends javax.swing.JFrame {
    
    MainFrame mainFrame;
    ProductController productController;
    ItemController itemController;
    Color focusInColor;
    Color focusOutColor;
    
    public ReceivingItemFrame() {
        initComponents();
        myInitialization();
    }
    
    public ReceivingItemFrame(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        productController = new ProductController();
        itemController = new ItemController();
        initComponents();
        myInitialization();
        fillProductFields();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeaderPanel = new javax.swing.JPanel();
        productIdPanel = new javax.swing.JPanel();
        productIdLabel = new javax.swing.JLabel();
        productIdField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        hiddenComboBox = new javax.swing.JComboBox<>();
        productIdErrorLabel = new javax.swing.JLabel();
        productDescriptionPanel = new javax.swing.JPanel();
        productDescriptionField = new javax.swing.JComboBox<>();
        productDescriptionLabel = new javax.swing.JLabel();
        itemIdPanel = new javax.swing.JPanel();
        itemIdLabel = new javax.swing.JLabel();
        itemCodeField = new javax.swing.JFormattedTextField();
        itemIdErrorLabel = new javax.swing.JLabel();
        servicePanel = new javax.swing.JPanel();
        cleaningLabel = new javax.swing.JLabel();
        storingLabel = new javax.swing.JLabel();
        mendingLabel = new javax.swing.JLabel();
        cleaningField = new javax.swing.JCheckBox();
        storingField = new javax.swing.JCheckBox();
        mendingField = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        noteField = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );

        productIdLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        productIdLabel.setText("ΚΩΔΙΚΟΣ ΠΡΟΙΟΝΤΟΣ");

        productIdField.setBackground(new java.awt.Color(255, 255, 153));
        productIdField.setColumns(3);
        productIdField.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        productIdField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productIdFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productIdFieldFocusLost(evt);
            }
        });
        productIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productIdFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productIdFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                productIdFieldKeyTyped(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("ΝΕΟ ΠΡΟΙΟΝ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        productIdErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        productIdErrorLabel.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout productIdPanelLayout = new javax.swing.GroupLayout(productIdPanel);
        productIdPanel.setLayout(productIdPanelLayout);
        productIdPanelLayout.setHorizontalGroup(
            productIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productIdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productIdLabel)
                .addGap(30, 30, 30)
                .addComponent(productIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(productIdErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hiddenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        productIdPanelLayout.setVerticalGroup(
            productIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productIdPanelLayout.createSequentialGroup()
                .addGroup(productIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productIdPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(productIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hiddenComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productIdErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productIdPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(productIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        productDescriptionField.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        productDescriptionField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                productDescriptionFieldItemStateChanged(evt);
            }
        });
        productDescriptionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                productDescriptionFieldFocusLost(evt);
            }
        });
        productDescriptionField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productDescriptionFieldKeyPressed(evt);
            }
        });

        productDescriptionLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        productDescriptionLabel.setText("ΠΕΡΙΓΡΑΦΗ ΠΡΟΙΟΝΤΟΣ");

        itemIdLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        itemIdLabel.setText("ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ");

        itemCodeField.setBackground(new java.awt.Color(255, 255, 153));
        try {
            itemCodeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        itemCodeField.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        itemCodeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemCodeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemCodeFieldFocusLost(evt);
            }
        });
        itemCodeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemCodeFieldKeyPressed(evt);
            }
        });

        itemIdErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        itemIdErrorLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout itemIdPanelLayout = new javax.swing.GroupLayout(itemIdPanel);
        itemIdPanel.setLayout(itemIdPanelLayout);
        itemIdPanelLayout.setHorizontalGroup(
            itemIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemIdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemIdErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        itemIdPanelLayout.setVerticalGroup(
            itemIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemCodeField)
            .addGroup(itemIdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemIdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemIdErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout productDescriptionPanelLayout = new javax.swing.GroupLayout(productDescriptionPanel);
        productDescriptionPanel.setLayout(productDescriptionPanelLayout);
        productDescriptionPanelLayout.setHorizontalGroup(
            productDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productDescriptionPanelLayout.createSequentialGroup()
                .addGroup(productDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productDescriptionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(productDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productDescriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(itemIdPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        productDescriptionPanelLayout.setVerticalGroup(
            productDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productDescriptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productDescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productDescriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(itemIdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cleaningLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cleaningLabel.setText("ΚΑΘΑΡΙΣΜΑ");

        storingLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        storingLabel.setText("ΦΥΛΑΞΗ");

        mendingLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mendingLabel.setText("ΕΠΙΔΙΟΘΡΩΣΗ");

        cleaningField.setBackground(new java.awt.Color(255, 255, 153));
        cleaningField.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        cleaningField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cleaningFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cleaningFieldFocusLost(evt);
            }
        });
        cleaningField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cleaningFieldKeyPressed(evt);
            }
        });

        storingField.setBackground(new java.awt.Color(255, 255, 153));
        storingField.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        storingField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                storingFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                storingFieldFocusLost(evt);
            }
        });
        storingField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                storingFieldKeyPressed(evt);
            }
        });

        mendingField.setBackground(new java.awt.Color(255, 255, 153));
        mendingField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mendingFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mendingFieldFocusLost(evt);
            }
        });
        mendingField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mendingFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout servicePanelLayout = new javax.swing.GroupLayout(servicePanel);
        servicePanel.setLayout(servicePanelLayout);
        servicePanelLayout.setHorizontalGroup(
            servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(storingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cleaningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mendingLabel))
                .addGap(18, 18, 18)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(storingField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cleaningField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mendingField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        servicePanelLayout.setVerticalGroup(
            servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cleaningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(servicePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cleaningField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(storingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(storingField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mendingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mendingField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        noteField.setBackground(new java.awt.Color(255, 255, 153));
        noteField.setColumns(20);
        noteField.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        noteField.setLineWrap(true);
        noteField.setRows(5);
        noteField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                noteFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                noteFieldFocusLost(evt);
            }
        });
        noteField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noteFieldKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(noteField);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("ΣΗΜΕΙΩΜΑ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(371, 371, 371))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel7))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancelButton.setText("ΑΚΥΡΩΣΗ");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        submitButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        submitButton.setText("ΚΑΤΑΧΩΡΗΣΗ");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        submitButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(productIdPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(productDescriptionPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(servicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productIdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productDescriptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(servicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void myInitialization() {
        hiddenComboBox.setVisible(false);
        focusInColor = new Color(255, 255, 0);
        focusOutColor = new Color(240, 240, 240);
    }

    private void productIdFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productIdFieldKeyTyped
        //making sure that only + signed integers will be typed
        char c = evt.getKeyChar();
        String input = productIdField.getText();
        if (!(Character.isDigit(c))
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE)
                || (input.length() == 3)) {
            evt.consume();
        }
    }//GEN-LAST:event_productIdFieldKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        NewProductFrame newProductFrame = new NewProductFrame();
        newProductFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void productIdFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productIdFieldFocusLost
        if (!productIdInputValid()) {
            productIdErrorLabel.setText("ΛΑΘΟΣ ΚΩΔΙΚΟΣ");
            //productDescriptionField.requestFocus();
        } else {
            productIdField.setBackground(focusOutColor);
        }

    }//GEN-LAST:event_productIdFieldFocusLost

    private void productIdFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productIdFieldKeyReleased
        
        productIdInputValid();

    }//GEN-LAST:event_productIdFieldKeyReleased

    private void productDescriptionFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_productDescriptionFieldItemStateChanged
        if (productDescriptionField.getSelectedIndex() != -1) {
            hiddenComboBox.setSelectedIndex(productDescriptionField.getSelectedIndex());
            productIdField.setText(hiddenComboBox.getSelectedItem().toString());
            productIdField.setBackground(focusOutColor);
            productDescriptionField.setBackground(focusOutColor);
            productIdErrorLabel.setText("");
            
        }

    }//GEN-LAST:event_productDescriptionFieldItemStateChanged

    private void productIdFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productIdFieldFocusGained
        productIdField.selectAll();
        productIdErrorLabel.setText("");
    }//GEN-LAST:event_productIdFieldFocusGained

    private void productIdFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productIdFieldKeyPressed
        if (evt.getKeyCode() == 10) {
            if (productIdInputValid()) {
                itemCodeField.requestFocus();
            } else {
                productDescriptionField.requestFocus();
            }
        }

    }//GEN-LAST:event_productIdFieldKeyPressed

    private void itemCodeFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCodeFieldKeyPressed
        if (evt.getKeyCode() == 10) {
            
            cleaningField.requestFocus();
        }
    }//GEN-LAST:event_itemCodeFieldKeyPressed

    private void cleaningFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleaningFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT
                || evt.getKeyCode() == KeyEvent.VK_RIGHT
                || evt.getKeyCode() == KeyEvent.VK_UP
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (cleaningField.isSelected()) {
                cleaningField.setSelected(false);
            } else {
                cleaningField.setSelected(true);
            }
            
        }
        if (evt.getKeyCode() == 10) {
            storingField.requestFocus();
        }
    }//GEN-LAST:event_cleaningFieldKeyPressed

    private void cleaningFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cleaningFieldFocusGained
        cleaningField.setBackground(focusInColor);
    }//GEN-LAST:event_cleaningFieldFocusGained

    private void storingFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_storingFieldFocusGained
        storingField.setBackground(focusInColor);
    }//GEN-LAST:event_storingFieldFocusGained

    private void mendingFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mendingFieldFocusGained
        mendingField.setBackground(focusInColor);
    }//GEN-LAST:event_mendingFieldFocusGained

    private void noteFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noteFieldFocusGained
        noteField.setBackground(focusInColor);
    }//GEN-LAST:event_noteFieldFocusGained

    private void storingFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_storingFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT
                || evt.getKeyCode() == KeyEvent.VK_RIGHT
                || evt.getKeyCode() == KeyEvent.VK_UP
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (storingField.isSelected()) {
                storingField.setSelected(false);
            } else {
                storingField.setSelected(true);
            }
            
        }
        if (evt.getKeyCode() == 10) {
            mendingField.requestFocus();
        }
    }//GEN-LAST:event_storingFieldKeyPressed

    private void noteFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteFieldKeyPressed
        if (evt.getKeyCode() == 10) {
            submitButton.requestFocus();
        }
    }//GEN-LAST:event_noteFieldKeyPressed

    private void mendingFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mendingFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT
                || evt.getKeyCode() == KeyEvent.VK_RIGHT
                || evt.getKeyCode() == KeyEvent.VK_UP
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (mendingField.isSelected()) {
                mendingField.setSelected(false);
            } else {
                mendingField.setSelected(true);
            }
            
        }
        if (evt.getKeyCode() == 10) {
            noteField.requestFocus();
        }
    }//GEN-LAST:event_mendingFieldKeyPressed

    private void cleaningFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cleaningFieldFocusLost
        cleaningField.setBackground(focusOutColor);
    }//GEN-LAST:event_cleaningFieldFocusLost

    private void storingFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_storingFieldFocusLost
        storingField.setBackground(focusOutColor);
    }//GEN-LAST:event_storingFieldFocusLost

    private void mendingFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mendingFieldFocusLost
        mendingField.setBackground(focusOutColor);
    }//GEN-LAST:event_mendingFieldFocusLost

    private void noteFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noteFieldFocusLost
        noteField.setBackground(focusOutColor);
    }//GEN-LAST:event_noteFieldFocusLost

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if (productChosen() && itemCodeGoodToGo() && serviceChosen() && noteFieldInputValid()) {
            Item receivedItem = collectItemInformation();
            mainFrame.addItemToReceivingItemsTable(receivedItem);
            this.dispose();
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void productDescriptionFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productDescriptionFieldKeyPressed
        if (evt.getKeyCode() == 10 && productDescriptionField.getSelectedIndex() != -1) {
            itemCodeField.requestFocus();
        }

    }//GEN-LAST:event_productDescriptionFieldKeyPressed

    private void productDescriptionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productDescriptionFieldFocusLost
        if (productDescriptionField.getSelectedIndex() == -1) {
            productDescriptionField.setBackground(Color.red);
            
        } else {
            productIdField.setBackground(focusOutColor);
            productDescriptionField.setBackground(focusOutColor);
            
        }
    }//GEN-LAST:event_productDescriptionFieldFocusLost

    private void itemCodeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemCodeFieldFocusLost
        itemCodeInputValid();

    }//GEN-LAST:event_itemCodeFieldFocusLost
    
    private boolean itemCodeInputValid() {
        boolean valid = false;
        String id = itemCodeField.getText().trim();
        if (id.length() < 5) {
            
            itemIdErrorLabel.setText("ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΠΡΕΠΕΙ ΝΑ ΕΧΕΙ 5 ΨΗΦΙΑ");
            itemCodeField.setBackground(Color.red);
            
        } else {
            itemCodeField.setBackground(focusOutColor);
            
            valid = true;
        }
        return valid;
    }

    private void itemCodeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemCodeFieldFocusGained
        itemCodeField.setCaretPosition(itemCodeField.getDocument().getLength());
        itemCodeField.setBackground(focusInColor);
        itemIdErrorLabel.setText("");
    }//GEN-LAST:event_itemCodeFieldFocusGained

    private void submitButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_submitButtonKeyPressed
        if (evt.getKeyCode() == 10) {
            submitButton.doClick();
        }
    }//GEN-LAST:event_submitButtonKeyPressed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox cleaningField;
    private javax.swing.JLabel cleaningLabel;
    private javax.swing.JComboBox<String> hiddenComboBox;
    private javax.swing.JFormattedTextField itemCodeField;
    private javax.swing.JLabel itemIdErrorLabel;
    private javax.swing.JLabel itemIdLabel;
    private javax.swing.JPanel itemIdPanel;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox mendingField;
    private javax.swing.JLabel mendingLabel;
    private javax.swing.JTextArea noteField;
    private javax.swing.JComboBox<String> productDescriptionField;
    private javax.swing.JLabel productDescriptionLabel;
    private javax.swing.JPanel productDescriptionPanel;
    private javax.swing.JLabel productIdErrorLabel;
    private javax.swing.JTextField productIdField;
    private javax.swing.JLabel productIdLabel;
    private javax.swing.JPanel productIdPanel;
    private javax.swing.JPanel servicePanel;
    private javax.swing.JCheckBox storingField;
    private javax.swing.JLabel storingLabel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables

    private void fillProductFields() {
        hiddenComboBox.removeAllItems();
        productDescriptionField.removeAllItems();
        ArrayList<Product> products = productController.getProducts();
        
        for (Product product : products) {
            hiddenComboBox.addItem(String.valueOf(product.getId()));//it could be an array, or arrayList, i suppose
            productDescriptionField.addItem(product.getDescription());
            
        }
        
    }
    
    public boolean productIdInputValid() {
        boolean valid = false;
        if (!productIdField.getText().equals("")) {
            String id = productIdField.getText().trim();
            DefaultComboBoxModel model = (DefaultComboBoxModel) hiddenComboBox.getModel();
            int index = model.getIndexOf(id);
            productDescriptionField.setSelectedIndex(index);
            if (index != -1) {
                valid = true;
                productIdField.setBackground(new Color(255, 255, 255));
            } else {
                productIdField.setBackground(Color.red);
                
            }
        } else {
            productDescriptionField.setSelectedIndex(-1);
            productIdField.setBackground(Color.red);
            
        }
        return valid;
    }
    
    private boolean productChosen() {
        boolean chosen = false;
        if (productDescriptionField.getSelectedIndex() != -1) {
            chosen = true;
        } else {
            productDescriptionField.setBackground(Color.red);
            JOptionPane.showMessageDialog(null,
                    "ΔΕΝ ΕΧΕΙ ΓΙΝΕΙ ΕΠΙΛΟΓΗ ΠΡΟΙΟΝΤΟΣ",
                    "ΛΑΘΟΣ ΠΡΟΙΟΝ",
                    JOptionPane.ERROR_MESSAGE);
            
        }
        
        return chosen;
    }
    
    private boolean itemCodeGoodToGo() {
        boolean goodToGo = false;
        switch (1) {
            case 1:
                if (itemCodeInputValid()) {
                    goodToGo = true;
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΠΡΕΠΕΙ ΝΑ ΕΧΕΙ 5 ΨΗΦΙΑ",
                            "ΛΑΘΟΣ ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ",
                            JOptionPane.ERROR_MESSAGE
                    );
                    break;
                }
            
            case 2:
                if (itemCodeRegisteredInDb()) {
                    JOptionPane.showMessageDialog(null,
                            "Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΗΔΗ ΥΠΑΡΧΕΙ ΣΤΗ ΒΑΣΗ",
                            "ΛΑΘΟΣ ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ",
                            JOptionPane.ERROR_MESSAGE
                    );
                    goodToGo = false;
                    returnFocusToItemField();
                    break;
                } else {
                    goodToGo = true;
                }
            case 3:
                if (itemCodeRegisteredInReceivingReport()) {
                    JOptionPane.showMessageDialog(null,
                            "Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΗΔΗ ΕΧΕΙ ΚΑΤΑΧΩΡΗΘΗ ΣΤΟ ΔΕΛΤΙΟ",
                            "ΛΑΘΟΣ ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ",
                            JOptionPane.ERROR_MESSAGE
                    );
                    goodToGo = false;
                    returnFocusToItemField();
                    break;//in case here comes case 4
                } else {
                    goodToGo = true;
                }
        }
        return goodToGo;
    }
    
    private boolean itemCodeRegisteredInDb() {
        int itemCode = Integer.parseInt(itemCodeField.getText().toString());
       // int itemYear=Integer.parseInt(itemYearField.)
//not worried about exception, field is checked by itemCodeInputValid in  switch above
        return itemController.itemCodeRegisteredInDb(itemCode);
        
    }
    
    private boolean itemCodeRegisteredInReceivingReport() {
        
        String itemCodeInput = itemCodeField.getText();//again, not worried about input, `cous its checked before
        int rowCount = mainFrame.receivingItemsTableModel.getRowCount();
        
        if (rowCount > 0) {
            
            for (int x = 0; x < rowCount; x++) {
                
                String itemCodeInTable = mainFrame.receivingItemsTableModel.getValueAt(x, 2).toString();
                System.out.println(itemCodeInTable);
                if (itemCodeInput.equals(itemCodeInTable)) {
                    return true;
                }
                
            }
            
        }
        return false;
    }
    
    private boolean serviceChosen() {
        if (cleaningField.isSelected() || storingField.isSelected() || mendingField.isSelected()) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null,
                    "At least one service has to be chosen",
                    "ΛΑΘΟΣ ΕΠΙΛΟΓΗ ΥΠΗΡΕΣΙΑΣ",
                    JOptionPane.ERROR_MESSAGE
            );
            cleaningField.setBackground(Color.red);
            storingField.setBackground(Color.red);
            mendingField.setBackground(Color.red);
            return false;
        }
        
    }
    
    private Item collectItemInformation() {
        Item item = new Item();
        item.setId(Integer.parseInt(productIdField.getText()));
        item.setDescription(productDescriptionField.getSelectedItem().toString());
        item.setCode(Integer.parseInt(itemCodeField.getText()));
        item.setForCleaning(cleaningField.isSelected());
        item.setForStoring(storingField.isSelected());
        item.setForMending(mendingField.isSelected());
        item.setNote(noteField.getText());
        return item;
    }
    
    private boolean noteFieldInputValid() {
        System.out.println("need some work here-noteFieldInputValid");
        return true;
    }
    
    private void returnFocusToItemField() {
        
        itemCodeField.requestFocus();
        itemCodeField.setCaretPosition(itemCodeField.getText().trim().length());
   //"I wanted to set carret to the end of text inside, but somehow its not working";
    }
    
}
