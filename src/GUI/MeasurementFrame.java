/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controllers.ItemController;
import Models.Item;
import Tools.JNumericField;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyListener;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Michail Sitmalidis
 */
public class MeasurementFrame extends javax.swing.JFrame {

    private JNumericField lengthField;
    private JNumericField widthField;
    private Font font;
    private SimpleDateFormat dateFormat;
    private Color focusInColor;
    private Color focusOutColor;
    private ItemController itemController;
    private Item item;

    public MeasurementFrame() {
        initComponents();
        myInitialization();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        itemYear = new javax.swing.JComboBox<>();
        itemCodeField = new javax.swing.JFormattedTextField();
        lengthPanel = new javax.swing.JPanel();
        widthPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        itemCodeErrorLabel = new javax.swing.JLabel();
        lengthErrorLabel = new javax.swing.JLabel();
        widthErrorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("ΧΡΟΝΙΑ/ΣΕΙΡΑ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("ΜΗΚΟΣ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("ΠΛΑΤΟΣ");

        itemYear.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        itemYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        try {
            itemCodeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        itemCodeField.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        itemCodeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemCodeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemCodeFieldFocusLost(evt);
            }
        });
        itemCodeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemCodeFieldKeyPressed(evt);
            }
        });

        lengthPanel.setBackground(new java.awt.Color(102, 255, 102));
        lengthPanel.setLayout(new javax.swing.BoxLayout(lengthPanel, javax.swing.BoxLayout.LINE_AXIS));

        widthPanel.setBackground(new java.awt.Color(51, 255, 51));
        widthPanel.setLayout(new javax.swing.BoxLayout(widthPanel, javax.swing.BoxLayout.LINE_AXIS));

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        saveButton.setText("ΑΠΟΘΗΚΕΥΣΗ");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        saveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveButtonKeyPressed(evt);
            }
        });

        itemCodeErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 15)); // NOI18N
        itemCodeErrorLabel.setForeground(java.awt.Color.red);

        lengthErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 15)); // NOI18N
        lengthErrorLabel.setForeground(java.awt.Color.red);

        widthErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 15)); // NOI18N
        widthErrorLabel.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(itemYear, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(47, 47, 47)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lengthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(widthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(widthErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                                .addComponent(lengthErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(itemCodeErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(itemCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(itemCodeErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lengthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lengthErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(widthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(widthErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itemCodeFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCodeFieldKeyPressed
        if (evt.getKeyCode() == 10) {
            lengthField.requestFocus();
        }
    }//GEN-LAST:event_itemCodeFieldKeyPressed

    private void saveButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveButtonKeyPressed
        saveButton.doClick();
    }//GEN-LAST:event_saveButtonKeyPressed

    private void itemCodeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemCodeFieldFocusLost
        itemCodeInputValid();        // TODO add your handling code here:
    }//GEN-LAST:event_itemCodeFieldFocusLost

    private void itemCodeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemCodeFieldFocusGained
        //  itemCodeField.setCaretPosition(itemCodeField.getDocument().getLength());
        itemCodeField.setBackground(focusInColor);
        itemCodeErrorLabel.setText("");
    }//GEN-LAST:event_itemCodeFieldFocusGained

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (itemGoodToGo()) {
            item.setCode(Integer.parseInt(itemCodeField.getText()));
            item.setYear(Integer.parseInt(itemYear.getSelectedItem().toString()));
            item.setLength(new BigDecimal(lengthField.getText()));
            item.setWidth(new BigDecimal(widthField.getText()));
            itemController.updateItemDimensions(item);
        };
        itemCodeField.setText("");
        lengthField.setText("");
        widthField.setText("");
        itemCodeField.requestFocus();
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    private void myInitialization() {
        this.setTitle("ΚΑΤΑΧΩΡΗΣΗ ΔΙΑΣΤΑΣΕΩΝ");
        item = null;

        itemController = new ItemController();
        focusInColor = new Color(255, 255, 0);
        focusOutColor = new Color(240, 240, 240);
//setting year in itemYear Combobox
        dateFormat = new SimpleDateFormat("yyyy");
        String date = dateFormat.format(new Date());
        DefaultComboBoxModel model = (DefaultComboBoxModel) itemYear.getModel();
        int selectedIndex = model.getIndexOf(date);
        itemYear.setSelectedIndex(selectedIndex);

        font = new Font("Tahoma", Font.PLAIN, 36);
        lengthField = new JNumericField();
        // lengthField.setMaxLength(2); //2 is defaul, i dont think there is a carpet more then 99,99 meters long
        lengthField.setFont(font);
        lengthField.setAllowNegative(false);

        lengthField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == 10) {
                    widthField.requestFocus();
                }
            }
        });

        lengthField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lengthErrorLabel.setText("");
                lengthField.setBackground(focusInColor);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                lengthFieldGoodToGo();
            }
        });

        lengthPanel.add(lengthField);

        widthField = new JNumericField();
        widthField.setFont(font);
        widthField.setAllowNegative(false);
        widthField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                widthErrorLabel.setText("");
                widthField.setBackground(focusInColor);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                widthFieldGoodToGo();
            }
        });

        widthPanel.add(widthField);
        widthField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == 10) {
                    saveButton.requestFocus();
                }
            }
        });

        itemCodeField.requestFocus();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel itemCodeErrorLabel;
    private javax.swing.JFormattedTextField itemCodeField;
    private javax.swing.JComboBox<String> itemYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lengthErrorLabel;
    private javax.swing.JPanel lengthPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel widthErrorLabel;
    private javax.swing.JPanel widthPanel;
    // End of variables declaration//GEN-END:variables

    private boolean itemCodeInputValid() {
        boolean valid = false;
        String id = itemCodeField.getText().trim();
        if (id.length() < 5) {

            itemCodeErrorLabel.setText("ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΠΡΕΠΕΙ ΝΑ ΕΧΕΙ 5 ΨΗΦΙΑ");
            itemCodeField.setBackground(Color.red);

        } else {
            itemCodeField.setBackground(focusOutColor);

            valid = true;
        }
        return valid;
    }

    private boolean dimensionInputEmpty(String input) {
        return (input.trim().length() == 0);
    }

    private boolean dimensionInputZero(String input) {
        return (Double.valueOf(input.trim()) == 0.0);
    }

    private boolean lengthFieldGoodToGo() {
        boolean goodToGo = false;
        String input = lengthField.getText().trim();
        switch (1) {
            case 1:
                if (dimensionInputEmpty(input)) {
                    lengthField.setBackground(Color.red);
                    lengthErrorLabel.setText("ΠΕΔΙΟ 'ΜΗΚΟΣ' ΔΕΝ ΜΠΟΡΕΙ ΝΑΙ ΕΙΝΑΙ ΑΔΕΙΟ");
                    break;
                }
            case 2:
                if (dimensionInputZero(input)) {
                    lengthField.setBackground(Color.red);
                    lengthErrorLabel.setText("ΠΕΔΙΟ 'ΜΗΚΟΣ' ΔΕΝ ΜΠΟΡΕΙ ΝΑ ΕΙΝΑΙ ΜΗΔΕΝ");
                    break;
                }
            case 3:
                lengthField.setBackground(focusOutColor);
                goodToGo = true;
        }
        return goodToGo;
    }

    private boolean widthFieldGoodToGo() {
        boolean goodToGo = false;
        String input = widthField.getText().trim();

        switch (1) {
            case 1:
                if (dimensionInputEmpty(input)) {
                    widthField.setBackground(Color.red);
                    widthErrorLabel.setText("ΠΕΔΙΟ 'ΠΛΑΤΟΣ' ΔΕΝ ΜΠΟΡΕΙ ΝΑΙ ΕΙΝΑΙ ΑΔΕΙΟ");
                    break;
                }
            case 2:
                if (dimensionInputZero(input)) {
                    widthField.setBackground(Color.red);
                    widthErrorLabel.setText("ΠΕΔΙΟ 'ΠΛΑΤΟΣ' ΔΕΝ ΜΠΟΡΕΙ ΝΑ ΕΙΝΑΙ ΜΗΔΕΝ");
                    break;
                }
            case 3:
                widthField.setBackground(focusOutColor);
                goodToGo = true;
        }
        return goodToGo;
    }

    private boolean itemGoodToGo() {

        boolean goodToGo = false;
        switch (1) {
            case 1:
                if (itemCodeInputValid()) {//first i check code input
                    goodToGo = true;
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΠΡΕΠΕΙ ΝΑ ΕΧΕΙ 5 ΨΗΦΙΑ",
                            "ΛΑΘΟΣ ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ",
                            JOptionPane.ERROR_MESSAGE
                    );
                    itemCodeField.setBackground(Color.red);
                    itemCodeErrorLabel.setText("Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΠΡΕΠΕΙ ΝΑ ΕΧΕΙ 5 ΨΗΦΙΑ");

                    break;
                }
            case 2:
                //now i get item from db
                item = itemController.getItemByCode(itemCodeField.getText().trim(), itemYear.getSelectedItem().toString());
                if (item != null) {
                    goodToGo = true;
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΔΕΝ ΥΠΑΡΧΕΙ ΣΤΗ ΒΑΣΗ",
                            "ΛΑΘΟΣ ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ",
                            JOptionPane.ERROR_MESSAGE
                    );
                    goodToGo = false;
                    itemCodeField.setBackground(Color.red);
                    itemCodeErrorLabel.setText("Ο ΚΩΔΙΚΟΣ ΤΕΜΑΧΙΟΥ ΔΕΝ ΥΠΑΡΧΕΙ ΣΤΗ ΒΑΣΗ");
                    itemCodeField.requestFocus();
                    break;
                }
            case 3:
                if (lengthFieldGoodToGo()) {

                } else {
                    JOptionPane.showMessageDialog(null,
                            "ΛΑΘΟΣ ΣΤΟ ΠΕΔΙΟ ΜΗΚΟΣ",
                            "ΛΑΘΟΣ ΣΤΟ ΠΕΔΙΟ ΜΗΚΟΣ",
                            JOptionPane.ERROR_MESSAGE
                    );
                    goodToGo = false;

                    break;
                }
            case 4:
                if (widthFieldGoodToGo()) {
                    goodToGo = true;
                } else {
                    JOptionPane.showMessageDialog(null,
                            "ΛΑΘΟΣ ΣΤΟ ΠΕΔΙΟ platos",
                            "ΛΑΘΟΣ ΣΤΟ ΠΕΔΙΟ platos",
                            JOptionPane.ERROR_MESSAGE
                    );
                    goodToGo = false;

                    break;
                }
            case 5:
                if (item.getLength() != null || item.getWidth() != null) {
                    int result = JOptionPane.showConfirmDialog(null, "ΔΙΑΣΤΑΣΕΙΣ ΗΔΗ ΕΧΕΟΥΝ ΚΑΤΑΧΩΡΗΘΕΙ ΓΙΑ ΑΥΤΟΝ ΤΟΝ ΚΩΔΙΚΟ, ΘΕΣ ΝΑ ΤΟ ΑΛΛΑΞΕΙΣ?", "ΜΗΚΟΣ ΚΑΤΑΧΩΡΗΜΕΝΟ",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE);
                    if (result == JOptionPane.YES_OPTION) {
                        goodToGo = true;
                    } else if (result == JOptionPane.NO_OPTION) {
                        goodToGo = false;
                        break;
                    }

                } else {
                    goodToGo = true;
                }

        }
        return goodToGo;
    }

}
